pwd         Shows working directory
ls          Shows files in the folder
ctrl+l      Clean terminal
ls -lh      Shows files in human readable way
cd          Change directory
cd ..       Go to previous level/folder
ls -lSh     Shows file sorted by size and human readable
tree        Tree view
mkdir       Creates new directory
touch       Creates new file
mkdir d1 d2 Multiple directories in one line
cp          Copy files
mv f1 ..    Move file to previous level
mv f1 f2    Rename file1 to file2 in the same directory 
rm          Remove file
rm -i       Interactive way to remove files
rm -ri      Removes a directory in interactive way

## Exploring Files ##
head        Shows first 10 lines of a file
head -n 15  Shows first 15 lines of a file
tail        Shows last 10 lines of a file
less        Explores the file interactively
xdg-open    Open a file in 3rd party app

## Commands ##
alias l="ls -lh"    Create an alias for ls -lh (like a shorcut)

## Wildcards ##
*.txt
*.py
ls -f [[:upper:]]*  Search for files that start with Upper case
? matches a single character, so 201?.txt will match 2017.txt or 2018.txt, but not 2017-01.txt.
[...] matches any one of the characters inside the square brackets, so 201[78].txt matches 2017.txt or 2018.txt, but not 2016.txt.
{...} matches any of the comma-separated patterns inside the curly brackets, so {*.txt, *.csv} matches any file whose name ends with .txt or .csv, but not files whose names end with .pdf

## Direction ##
ls location >> file.txt     Crate a file .txt with content inside location
ls anything 2> error.txt    Create a file when an error occurs. The >2 guarantee the file creation when there's an error
ls location >> file.txt 2>&1    Create/concatenates when a successful/failed execution happens


## Chaining proccesses
ls ; mkdir abc ; cal        Execute sequentially
ls & mkdir abc & cal        Execute in parallel
mkdir test && cd test       Execute command conditionally (and condition) 
mkdir test ||cd test        Execute command conditionally (or condition) 

## Permissions ##
whoami                      Who Am I
chmod u+r filename          Adds read permissions for the user
chmod u-r filename          Removes read permissions for the user
su root                     Switch to root user
sudo command                Execute command as a root user
https://josenoriegaa.github.io/linux-file-system-permission-generator/index.html

## Environment variables ##
printenv                    Print all Environment variables
echo $HOME                  Print HOME variable
echo $PATH                  Print PATH variable
code .bashrc                Open Bash configuration
PATH=$PATH:/home/user/bin   In the bashrc file creates a new location in the PATH variable

## Search Commands ##
which code                      Look for bin used in Vs code
find ./ -name file file_name    Find a file_name 
find ./ -type f -name *.log     Find all files with extension .log
find ./ -size  20M              Find files with size>20

## Sort information ##
sort                            By default it does this in ascending alphabetical order, but the flags -n and -r can be used to sort numerically and reverse the order of its output, while -b tells it to ignore leading blanks and -f tells it to fold case (i.e., be case-insensitive)

## Grep ##
grep -c the movies.csv          Count occurrences of the word the
grep -ci the movies.csv         Same but ignoring case sentive
grep -vi Towers movies.csv      Find everything different to Towers
wc movies.csv                   Count words in the file
-c: print a count of matching lines rather than the lines themselves
-h: do not print the names of files when searching multiple files
-i: ignore case (e.g., treat "Regression" and "regression" as matches)
-l: print the names of files that contain matches, not the matches
-n: print line numbers for matching lines
-v: invert the match, i.e., only show lines that don't match

## Network Utilities ##
ifconfig                        Info about my Network
ping                            If a website is working or not 
curl                            Extract html file from a web site
wget                            
traceroute                      All computers that are linked to access one website
netstat -i                      Network statistics

## Pipe Operator (Combine multiple commands) ##
cut -d , -f 2 seasonal/summer.csv | grep -v Tooth | head -n1

## Compress Files ##
tar -cvzf ToCompress.tar.gz ToCompress             c(compress) v(verbose) z(G Zip) f(file)  ToCompres: a folder or file
tar -xvzf ToCompress.tar.gz                         To extract the compressed file

## Loops ##
for filename in seasonal/*.csv; do echo $filename; done

## Create and modify files ##
nano file_name                  Opens nano to modify files

## Script files##
script.sh
bash script.sh    (this is to execute the script)
nano count-records.sh
$ bash count-records.sh seasonal/*.csv > num-records.out

head -n $2 $1 | tail -n 1 | cut -d , -f $3

